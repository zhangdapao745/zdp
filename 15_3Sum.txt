15. 3Sum

Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

solution:
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {

		List<List<Integer>> ret = new LinkedList<>();
		Arrays.sort(nums);
		for(int i = 0; i < nums.length;i++){
			if(i>=1 && nums[i] == nums[i-1]){
				continue;
			}else{
				twoSum(nums, i, ret);
			}
		}
		return ret;
	}
	
	public void twoSum(int[] nums,int f,List<List<Integer>> ret){
		int target = -nums[f];
		int l = f + 1;
		int r = nums.length -1;
		List<Integer> solution = new LinkedList<>();
		while (l<r) {
			if(nums[l] + nums[r] > target){
				r--;
				while(l<r && nums[r+1] == nums[r]){
					r--;
				}
			}else if(nums[l] + nums[r] <target){
				l++;
				while(l<r && nums[l] == nums[l-1]){
					l++;
				}
			}else {
				solution.add(nums[f]);
				solution.add(nums[l]);
				solution.add(nums[r]);
				ret.add(solution);
				solution = new LinkedList<>();
				l++;
				while(l<r && nums[l] == nums[l-1]){
					l++;
				}
			}
		}
	}
}