有一个X*Y的网格，小团要在此网格上从左上角到右下角，只能走格点且只能向右或向下走。请设计一个算法，计算小团有多少种走法。给定两个正整数int x,int y，请返回小团的走法数目。

思路：
dp[i][j] = dp[i-1][j] + dp[i][j-1]

solution:
import java.util.Scanner;
 
public class Main {
 
    public static void main(String[] args) {
         
        int[][] dp = new int[11][11];
        for(int i = 0; i <= 10;i++){
            dp[i][0] = 1;
            dp[0][i] = 1;
        }
        for(int i = 1; i <= 10; i++){
            for(int j = 1; j <= 10;j++){
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
            }
        }
        Scanner scanner = new Scanner(System.in);
        while (scanner.hasNextInt()) {
            int x = scanner.nextInt();
            int y = scanner.nextInt();
            System.out.println(dp[x][y]);
        }
    }
}