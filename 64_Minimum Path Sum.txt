Given a m x n grid filled with non-negative numbers, 
find a path from top left to bottom right which minimizes the sum of 
all numbers along its path.

Note: You can only move either down or right at any point in time.

Solution:

class Solution {
    public int minPathSum(int[][] grid) {
        int ni = grid.length;
        int nj = grid[0].length;
        
        int[][] dp = new int[ni][nj];
        
        dp[0][0] = grid[0][0];
        for(int j = 1; j < nj; j++){
        	dp[0][j] = dp[0][j-1] + grid[0][j];
        }
        for(int i = 1; i < ni; i++){
        	dp[i][0] = dp[i-1][0] + grid[i][0];
        }
        
        for(int i = 0; i < ni; i++){
        	for(int j = 0; j < nj ; j++){
        		System.out.print(dp[i][j] + " ");
        	}
        	System.out.println();
        }
        
        for(int i = 1; i < ni; i++){
        	for(int j = 1; j < nj ; j++){
        		dp[i][j] = Math.min(dp[i-1][j],dp[i][j-1])+grid[i][j];
        	}
        }
        
        return dp[ni-1][nj-1];
    }
}